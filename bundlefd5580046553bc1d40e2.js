!function(){"use strict";class t{constructor(t){this.container=t,this.states={normal:new s,animated:new i,hidden:new r},this.currentState=this.states.normal,this.value=0,this.circle=null,this.circumference=null,this.animFrameId=null,this.animStartTime=null,this.animDuration=2e3,this.initUI()}initUI(){const t=t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","svg");return e.setAttribute("width","170"),e.setAttribute("height","170"),e.classList.add("class","progress__svg"),t&&e.classList.add("progress__svg_dynamic"),e},e=t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","circle");return e.setAttribute("cx","85"),e.setAttribute("cy","85"),e.setAttribute("r","61"),e.classList.add("progress__circle"),t&&e.classList.add("js-progress-circle"),e};(()=>{const s=t(),i=t(!0),r=e(),a=e(!0);s.appendChild(r),i.appendChild(a);let n=document.createElement("div");n.classList.add("progress"),n.appendChild(s),n.appendChild(i),this.container.appendChild(n),this.circle=a})();const s=this.circle.r.baseVal.value;this.circumference=2*Math.PI*s,this.circle.style.strokeDasharray="".concat(this.circumference," ").concat(this.circumference),this.circle.style.strokeDashoffset=this.circumference,this.currentState.update(this)}setProgressState(t){this.states[t]&&this.currentState!==this.states[t]&&(this.currentState=this.states[t],this.currentState.update(this))}setProgressValue(t){this.value=isNaN(+t)?0:Math.min(Math.max(+t,0),100),this.currentState.update(this)}getProgressValue(){return Math.trunc(this.value)}startAnimation(){this.animFrameId||(this.circle.style.transition="none",this.animFrameId=requestAnimationFrame((t=>this.animate(t))))}animate(t){let e=this.value/100;this.animStartTime||(this.animStartTime=t-e*this.animDuration),e=(t-this.animStartTime)/this.animDuration,e>=1&&(this.animStartTime=t,e=0);let s=this.circumference*(1-e);this.circle.style.strokeDashoffset=s,this.value=100*e,this.animFrameId=requestAnimationFrame((t=>this.animate(t)))}stopAnimation(){this.animFrameId&&(cancelAnimationFrame(this.animFrameId),this.animFrameId=null),this.animStartTime=null}showProgress(){this.container.querySelector(".progress").classList.remove("progress_hidden")}hideProgress(){this.container.querySelector(".progress").classList.add("progress_hidden")}}class e{update(){throw new Error("Method update() does not exist in ".concat(this.constructor.name))}}class s extends e{update(t){t.showProgress(),t.stopAnimation(),t.circle.style.transition="stroke-dashoffset 0.3s ease-in-out";let e=t.circumference*(1-t.value/100);t.circle.style.strokeDashoffset=e}}class i extends e{update(t){t.showProgress(),t.animFrameId||t.startAnimation()}}class r extends e{update(t){t.stopAnimation(),t.hideProgress(),t.circle.style.strokeDashoffset=t.circumference}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".js-progress-bar"),s=document.querySelector(".js-progress-input"),i=document.querySelector(".js-animation-toggle"),r=document.querySelector(".js-hide-toggle"),a=new t(e);let n=!1,c=!1;const o=()=>{(n||c)&&(a.setProgressState("normal"),i.checked=!1,r.checked=!1,n=!1,c=!1)},h=()=>{s.value=a.getProgressValue()};h(),s.addEventListener("input",(function(){o(),a.setProgressValue(this.value),h()})),i.addEventListener("change",(function(){this.checked?(c&&(r.checked=!1),a.setProgressState("animated"),n=!0):(o(),h())})),r.addEventListener("change",(function(){this.checked?(a.setProgressState("hidden"),i.checked=!1,c=!0,h()):o()}))}))}();